TO deploy REV 

ENSURE CORRECT CONTEXT
kubectl config get-contexts


ensure custer preparedness
a1) ensure ingress
kubectl  -n ingress-nginx get svc

if not installed install ingress

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.26.1/deploy/static/mandatory.yaml

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.26.1/deploy/static/provider/cloud-generic.yaml

for single node and dev boxes we might have to restart the machine

b1) ensure default storageclass exists
kubectl get storageclass

for single node hostpath is good enough
for clusters we need cloud storage or need to provision longhorn

(check notes in codework\rev3.6\adminScripts\NOTES\my k8 setup)


INSTALL PROCEDURE


a) ensure secret-cloudconnect exists

kubectl -n revqa  get secrets

IF not 

kubectl -n revqa create secret docker-registry secret-cloudconnect --docker-server=cloudconnect.scanrev.com:5000 --docker-username=rancher --docker-password=XXXXXXXXXXXXXXXXXXX --docker-email=dee@labizbille.com


IF NOT   rev-secrets exists 
docker run --rm -e SVN_URL=https://github.com/shreedee/RevSDK/trunk/k8/templates labizbille/makek8 /scripts/fromsvn /templates/secrets.yml.j2 > secrets.yml
kubectl -n revqa apply -f secrets.yml


d) To create installable YML

docker run --rm -e REVVER=3.6.1.104 -e SVN_URL=https://github.com/shreedee/RevSDK/trunk/k8/templates labizbille/makek8 /scripts/fromsvn /templates/site.yml.j2  --format=yaml > site.yml

docker run --rm -e REVVER=3.6.1.104 -e USEMINIO=true -e REVHOST=kspolice.rev.local -e DATASIZE=500 -e SVN_URL=https://github.com/shreedee/RevSDK/trunk/k8/templates labizbille/makek8 /scripts/fromsvn /templates/site.yml.j2  --format=yaml > site.yml

kubectl -n revqa apply -f site.yml

additional features

FOR appliance (or small clusters )
* -e NORESOUCERESERVATION=true

* FOR OCR add  -e HASOCR=true

* FOR MINIO DATASIZE add  -e DATASIZE=XXX    (default is 25, unit is GB)

* for specific host add -e REVHOST=kspolice.rev.local

* for Google  use -e HASOCR=google
CREATE the Auth config by renaming the AUTH file to scanrevteam_google_key.json

kubectl create secret generic google-ocr-config --from-file=scanrevteam_google_key.json


* FOR S3
don't add USE MiNIO
instead make sure rev-s3-secrets exists with key accesskey and secretkey

* For Auth0
-e USEAUTH0=true
make sure auth0-creds exists with key apiIdentifier and clientSecret



***** FOR DEVELOPMENT ENVIRONMENT*******************

run commands in 
cd codework\rev3.6\k8Scripts

ENUSRE codework\rev3.6\k8Scripts\dist folder exists
md dist

c1) ensure  rev-secrets exists if not
docker run --rm -v %cd%/templates:/templates labizbille/makek8 /scripts/fromexisting /templates/secrets.yml.j2 > dist/secrets.yml
kubectl apply -f dist/secrets.yml



docker run --rm -e REVVER=devbox -e USEMINIO=true   -v %cd%/templates:/templates labizbille/makek8 /scripts/fromexisting /templates/site.yml.j2  --format=yaml > dist/site.yml
kubectl apply -f dist/site.yml

Rev will be available at http://host.docker.internal

******************************************************






DOING THINGHS

to forward a port
kubectl -n revqa port-forward --address 0.0.0.0 service/minio 8081:9000

kubectl -n revqa port-forward --address 0.0.0.0 service/rev-frontend 8081:80








OLD notes
docker run --rm -v %cd%/templates:/templates -e MONGOSERVER=myMongo dinutac/jinja2docker:2.1.6 /templates/site.yml.j2  --format=yaml > dist/site.yml

//pip3 install jinja2-base64-filters
docker run --rm -v %cd%/templates:/templates  dinutac/jinja2docker:2.1.6 /templates/secrets.yml.j2 --extension=jinja2_base64_filters.Base64Filters  --extension=cookiecutter.extensions.RandomStringExtension 


docker run --rm  -it --entrypoint sh     -v %cd%/templates:/templates  cloudconnect.scanrev.com:5000/jinja2docker:1.0.2


To set dev storage 9 IN POWERSJELL)
kubectl patch storageclass hostpath -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"false\"}}}'

kubectl patch storageclass local-storage -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'

for MONGOSERVER

https://medium.com/@dilipkumar/standalone-mongodb-on-kubernetes-cluster-19e7b5896b27

https://kubernetes.io/blog/2017/01/running-mongodb-on-kubernetes-with-statefulsets/

https://www.electronjs.org/apps/kube-forwarder


https://stackoverflow.com/questions/59255445/how-can-i-access-nginx-ingress-on-my-local




