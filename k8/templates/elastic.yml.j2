apiVersion: v1
kind: Service
metadata:
    name: {{ELASTICSERVER}}-loadbalancer
spec:
    ports:
    -   port: 9200
        name: http
    selector:
        app: {{ELASTICSERVER}}

---

apiVersion: v1
kind: Service
metadata:
    name: {{ELASTICSERVER}}-cluster
spec:
    clusterIP: None
    ports:
    -   port: 9300
        name: transport
    selector:
        app: {{ELASTICSERVER}}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: es-config
data:
  elasticsearch.yml: |
    cluster.name: my-{{ELASTICSERVER}}-cluster
    network.host: "0.0.0.0"
    bootstrap.memory_lock: false
    discovery.zen.ping.unicast.hosts: {{ELASTICSERVER}}-cluster
    discovery.zen.minimum_master_nodes: 1
    xpack.security.enabled: false
    xpack.monitoring.enabled: false
  ES_JAVA_OPTS: -Xms512m -Xmx512m

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: {{ELASTICSERVER}}-node
spec:
  serviceName: {{ELASTICSERVER}}
  selector:
    matchLabels:
        app: {{ELASTICSERVER}}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
        labels:
            app: {{ELASTICSERVER}}
    spec:
        securityContext:
            fsGroup: 1000
        initContainers:
        -   name: init-sysctl
            image: busybox
            imagePullPolicy: IfNotPresent
            securityContext:
                privileged: true
            command: ["sysctl", "-w", "vm.max_map_count=262144"]
        containers:
        -   name: {{ELASTICSERVER}}
            image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3
            securityContext:
                privileged: true
                runAsUser: 1000
                capabilities:
                    add:
                    - IPC_LOCK
                    - SYS_RESOURCE
            env:
            -   name: ES_JAVA_OPTS
                valueFrom:
                    configMapKeyRef:
                        name: es-config
                        key: ES_JAVA_OPTS
            readinessProbe:
                httpGet:
                    scheme: HTTP
                    path: /_cluster/health?local=true
                    port: 9200
                initialDelaySeconds: 5

            volumeMounts:
            -   name: es-data
                mountPath: /usr/share/elasticsearch/data
            -   name: elasticsearch-config
                mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
                subPath: elasticsearch.yml

            ports:
            -   containerPort: 9200
                name: es-http
            -   containerPort: 9300
                name: es-transport
        {% if not NORESOUCERESERVATION  %}
            resources:
                requests:
                    memory: "1000Mi"
        {% endif %}
        volumes:
            -   name: elasticsearch-config
                configMap:
                    name: es-config
                    items:
                    -   key: elasticsearch.yml
                        path: elasticsearch.yml
  volumeClaimTemplates:
  - metadata:
        name: es-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
        
